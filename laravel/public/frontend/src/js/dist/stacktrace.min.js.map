{"version":3,"sources":["stacktrace.js"],"names":["logError","ex","stack","logErrorUrl","url","fileName","document","location","message","name","out","join","$","ajax","type","data","alert","Function","prototype","trace","current","this","push","signature","caller","getName","params","toString","length","x","arguments","definition","split","exp","test","replace","window","msg","line","callee"],"mappings":"aAAA,SAASA,SAASC,EAAIC,GAClB,GAAU,MAAND,EADR,GAAsBC,MAAtBC,YAAA,CAIQ,IAAAC,EAAA,MAAAH,EAAAI,SAAAJ,EAAAI,SAAAC,SAAAC,SACH,MAAAL,GAAA,MAAAD,EAAAC,QAAAA,EAAAD,EAAAC,OAGD,IAAIA,EAAoBA,MAAfD,EAAIO,QAAoBP,EAAAQ,KAAMP,KAAWA,EAAAA,QAElDD,EAEAS,GAAO,uBAAyBN,EAAM,KADzBI,MAATE,IAAMA,GAAA,UAAqBR,EAAAS,KAAoBH,YAKnDI,EAAEC,KAAK,CAAPC,KAAO,OACCV,IAAED,YACHY,KAAEZ,CAAAA,QAFFO,UAfDM,MAAI,gCAeHC,SAAPC,UAAAC,MAAA,WAOJF,IAFC,IAAAE,EAAA,GAIOC,EAAUC,KAFTH,GACDC,EAAQG,KAAZF,EAAAG,aACIH,EAAUA,EAAdI,OACA,OAAOJ,GAGNH,SAAAC,UAAAK,UAAA,WAKD,IAAIA,EAAY,CAJhBd,KAAAY,KAAAI,UAPJC,OAAA,GAcQC,SAAU,WAJTT,IAAAA,EAAkC,EAAxBK,KAAnBG,OAA+BE,OACd,IAAGP,KAAAK,OAAAf,KAAA,QAAA,IAAA,GACN,OAAKc,KADChB,KAAA,IAAAiB,EAAA,MAIR,GAAAL,KAAIK,UAEJ,IAAO,IAAAG,EAAKpB,EAALoB,EAAAR,KAAkBK,UAAzBE,OAAAC,IACHN,EAAAG,OAAAJ,KAAAD,KAAAS,UAAAD,IAML,OAAON,GAFCA,SAAAA,UAAUG,QAAY,WAD1B,GAAAL,KAAAZ,KAEH,OAAAY,KAAAZ,KAOD,IAAIsB,EAAaV,KAAKM,WAAWK,MAAM,MAAM,GAN7CC,EAAOV,wBAdX,OAAAU,EAAAC,KAAAH,IAuBeA,EAAWC,MAAM,MAAM,GAAGG,QAAQF,EAAK,OAN7Cf,aAILkB,OAAIH,QAAM,SAAAI,EAAAjC,EAAVkC,GACaP,MAATE,WACkBD,MAAlBF,UAAOC,QAAAD,UAA0BK,OAAahB,OAClDnB,SAAOqC,EAAPP,UAAAS,OAAApB","file":"stacktrace.min.js","sourcesContent":["function logError(ex, stack) {\r\n    if (ex == null) return;\r\n    if (logErrorUrl == null) {\r\n        alert('logErrorUrl must be defined.');\r\n        return;\r\n    }\r\n\r\n    var url = ex.fileName != null ? ex.fileName : document.location;\r\n    if (stack == null && ex.stack != null) stack = ex.stack;\r\n\r\n    // format output\r\n    var out = ex.message != null ? ex.name + \": \" + ex.message : ex;\r\n    out += \": at document path '\" + url + \"'.\";\r\n    if (stack != null) out += \"\\n  at \" + stack.join(\"\\n  at \");\r\n\r\n    // send error message\r\n    $.ajax({\r\n        type: 'POST',\r\n        url: logErrorUrl,\r\n        data: { message: out }\r\n    });\r\n}\r\n\r\nFunction.prototype.trace = function () {\r\n    var trace = [];\r\n    var current = this;\r\n    while (current) {\r\n        trace.push(current.signature());\r\n        current = current.caller;\r\n    }\r\n    return trace;\r\n}\r\n\r\nFunction.prototype.signature = function () {\r\n    var signature = {\r\n        name: this.getName(),\r\n        params: [],\r\n        toString: function () {\r\n            var params = this.params.length > 0 ?\r\n                \"'\" + this.params.join(\"', '\") + \"'\" : \"\";\r\n            return this.name + \"(\" + params + \")\"\r\n        }\r\n    };\r\n    if (this.arguments) {\r\n        for (var x = 0; x < this.arguments.length; x++)\r\n            signature.params.push(this.arguments[x]);\r\n    }\r\n    return signature;\r\n}\r\n\r\nFunction.prototype.getName = function () {\r\n    if (this.name)\r\n        return this.name;\r\n    var definition = this.toString().split(\"\\n\")[0];\r\n    var exp = /^function ([^\\s(]+).+/;\r\n    if (exp.test(definition))\r\n        return definition.split(\"\\n\")[0].replace(exp, \"$1\") || \"anonymous\";\r\n    return \"anonymous\";\r\n}\r\n\r\nwindow.onerror = function (msg, url, line) {\r\n    if (arguments != null && arguments.callee != null && arguments.callee.trace)\r\n        logError(msg, arguments.callee.trace());\r\n}"]}